"use strict";(self.webpackChunkzzydoc=self.webpackChunkzzydoc||[]).push([[5751],{3905:(t,n,e)=>{e.d(n,{Zo:()=>s,kt:()=>m});var r=e(67294);function i(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function c(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function a(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?c(Object(e),!0).forEach((function(n){i(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):c(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function o(t,n){if(null==t)return{};var e,r,i=function(t,n){if(null==t)return{};var e,r,i={},c=Object.keys(t);for(r=0;r<c.length;r++)e=c[r],n.indexOf(e)>=0||(i[e]=t[e]);return i}(t,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(r=0;r<c.length;r++)e=c[r],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(i[e]=t[e])}return i}var p=r.createContext({}),l=function(t){var n=r.useContext(p),e=n;return t&&(e="function"==typeof t?t(n):a(a({},n),t)),e},s=function(t){var n=l(t.components);return r.createElement(p.Provider,{value:n},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var n=t.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(t,n){var e=t.components,i=t.mdxType,c=t.originalType,p=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),u=l(e),k=i,m=u["".concat(p,".").concat(k)]||u[k]||d[k]||c;return e?r.createElement(m,a(a({ref:n},s),{},{components:e})):r.createElement(m,a({ref:n},s))}));function m(t,n){var e=arguments,i=n&&n.mdxType;if("string"==typeof t||i){var c=e.length,a=new Array(c);a[0]=k;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=t,o[u]="string"==typeof t?t:i,a[1]=o;for(var l=2;l<c;l++)a[l]=e[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,e)}k.displayName="MDXCreateElement"},64852:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>l});var r=e(87462),i=(e(67294),e(3905));const c={},a="\u5355\u94fe\u8868\u5b9e\u73b0\u6808",o={unversionedId:"structure/linkedListStackImpl",id:"structure/linkedListStackImpl",title:"\u5355\u94fe\u8868\u5b9e\u73b0\u6808",description:"\u53ef\u4ee5\u4f7f\u7528\u5355\u94fe\u8868\u6765\u5b9e\u73b0\u6808\u3002\u901a\u8fc7\u5728\u8868\u9876\u7aef\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u6765\u5b9e\u73b0 PUSH\uff0c\u901a\u8fc7\u5220\u9664\u8868\u9876\u7aef\u5143\u7d20\u6765\u5b9e\u73b0 POP\u3002",source:"@site/docs/structure/linkedListStackImpl.md",sourceDirName:"structure",slug:"/structure/linkedListStackImpl",permalink:"/zzydoc/docs/structure/linkedListStackImpl",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"Structure",previous:{title:"\u6570\u7ec4\u5b9e\u73b0\u6808",permalink:"/zzydoc/docs/structure/arrayStackImpl"},next:{title:"\u94fe\u8868\u539f\u7406",permalink:"/zzydoc/docs/structure/linear02"}},p={},l=[],s={toc:l},u="wrapper";function d(t){let{components:n,...e}=t;return(0,i.kt)(u,(0,r.Z)({},s,e,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u5355\u94fe\u8868\u5b9e\u73b0\u6808"},"\u5355\u94fe\u8868\u5b9e\u73b0\u6808"),(0,i.kt)("p",null,"\u53ef\u4ee5\u4f7f\u7528\u5355\u94fe\u8868\u6765\u5b9e\u73b0\u6808\u3002\u901a\u8fc7\u5728\u8868\u9876\u7aef\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u6765\u5b9e\u73b0 PUSH\uff0c\u901a\u8fc7\u5220\u9664\u8868\u9876\u7aef\u5143\u7d20\u6765\u5b9e\u73b0 POP\u3002"),(0,i.kt)("p",null,"\u4f7f\u7528\u94fe\u8868\u65b9\u5f0f\u5b9e\u73b0\u7684\u6808\u53c8\u53eb\u52a8\u6001\u6808\u3002"),(0,i.kt)("p",null,"\u52a8\u6001\u6808\u6709\u94fe\u8868\u7684\u90e8\u5206\u7279\u6027\uff0c\u5373\u5143\u7d20\u4e0e\u5143\u7d20\u4e4b\u95f4\u5728\u7269\u7406\u5b58\u50a8\u4e0a\u53ef\u4ee5\u4e0d\u8fde\u7eed\uff0c\u4f46\u662f\u529f\u80fd\u6709\u4e9b\u53d7\u9650\u5236\uff0c\u52a8\u6001\u6808\u53ea\u80fd\u5728\u6808\u9876\u5904\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff0c\u4e0d\u80fd\u5728\u6808\u5c3e\u6216\u6808\u4e2d\u95f4\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'class StackNode {\n    int id;\n    StackNode next;\n\n    public StackNode(int id) {\n        this.id = id;\n    }\n\n    @Override\n    public String toString() {\n        return "StackNode{" +\n                "id=" + id +\n                \'}\';\n    }\n}\n\n// \u5355\u94fe\u8868\u5b9e\u73b0\u6808\n//\u94fe\u8868\u5b9e\u73b0\u6808\uff0c\u8981\u5148\u8003\u8651\u7684\u662f\u6808\u7684\u7279\u70b9\uff0c\u5148\u8fdb\u540e\u51fa,\npublic class LinkedListStack {\n\n    StackNode headNode = new StackNode(0);\n\n    int top = -1;\n    int maxStack = 0;\n\n    public LinkedListStack(int maxStack) {\n        this.maxStack = maxStack;\n    }\n\n    public boolean isEmpty() {\n        return this.top == -1;\n    }\n\n    public boolean isFull() {\n        return (this.top + 1) == maxStack;\n    }\n\n    // \u5728\u5934\u90e8\u63d2\u5165\n    public void push(StackNode stackNode) {\n        if (this.isFull()) {\n            throw new RuntimeException("\u6808\u5df2\u6ee1");\n        }\n        StackNode tmp = this.headNode;\n//        \u5728\u5934\u90e8\u63d2\u5165\u6570\u636e\n//        \u628a\u5373\u5c06\u8981\u63d2\u5165\u7684\u8282\u70b9\u7684next\u6307\u5411\u5934\u8282\u70b9\u6240\u6307\u5411\u7684\u8282\u70b9\u5730\u5740\n        stackNode.next = tmp.next;\n//        \u628a\u5934\u8282\u70b9\u7684next\u6307\u5411\u63d2\u5165\u7684\u8282\u70b9\n        tmp.next = stackNode;\n        top++;\n    }\n\n    //  \u5728\u5934\u90e8\u5f39\u51fa\n    public int pop() {\n        if (this.isEmpty()) {\n            throw new RuntimeException("\u6808\u4e3a\u7a7a");\n        }\n        // \u5f39\u51fa\u6307\u7684\u603b\u662f\u5934\u90e8\u7684\u8282\u70b9\n        StackNode tmp = this.headNode;\n        StackNode popStackNode = tmp.next;\n\n        tmp.next = tmp.next.next;\n        top--;\n\n        return popStackNode.id;\n    }\n\n\n    public int length() {\n        return this.top + 1;\n    }\n\n    public void list() {\n        if (this.isEmpty()) {\n            System.out.println("[]");\n            return;\n        }\n\n        StackNode tmp = this.headNode;\n        while (true) {\n            if (tmp.next == null) {\n                break;\n            }\n            System.out.println(tmp);\n            tmp = tmp.next;\n        }\n    }\n\n    public static void main(String[] args) {\n        LinkedListStack linkedListStack = new LinkedListStack(3);\n        linkedListStack.push(new StackNode(0));\n        linkedListStack.push(new StackNode(1));\n        linkedListStack.push(new StackNode(2));\n        linkedListStack.list();\n//        linkedListStack.push(new StackNode(3)); // Exception in thread "main" java.lang.RuntimeException: \u6808\u5df2\u6ee1\n        linkedListStack.pop();\n        linkedListStack.list();\n    }\n}\n\n\n\n')))}d.isMDXComponent=!0}}]);